@Library('sbms-pipeline-shared@master') _

pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 15, unit: 'MINUTES')
    }

    triggers {
        upstream(upstreamProjects: projectList(), threshold: hudson.model.Result.SUCCESS)
    }

    environment {
        DEV_HOST = "172.24.140.88"
        DOCKER_HOST = "tcp://$DEV_HOST:2376"
        DOCKER_TLS_VERIFY = "1"
        DOCKER_CERT_PATH = "/root/.tls"
    }

    stages {
        stage('Deploy to Dev') {
            environment {
                STACK_NAME = "sbms-dev-app"
                SOURCE_IMAGE_TAG = "latest"
                IMAGE_TAG = "dev"

                ADMIN_PORT = "19999"
                WEB_PORT = "18080"
                GREETING_PORT = "18100"
                DISCOVERY_PORT = "18761"

                MONGODB_DATA_PATH = "/opt/sbms/dev/mongodb"
                MONGODB_PORT = "27000"

                NETWORK_NAME = "sbms-dev-net"
            }
            steps {
                withDockerRegistry([url: '', credentialsId: 'DOCKER_HUB_CREDENTIALS']) {
                    pull("$SOURCE_IMAGE_TAG")
                    tag("$SOURCE_IMAGE_TAG", "$IMAGE_TAG")
                    deploy("$STACK_NAME")
                    push("$IMAGE_TAG")
                }
            }
        }
    }
    post {
        success {
            notify('INFO', 'The *DEV* environment has been deployed.')
        }
        failure {
            notify('WARN', 'The *DEV* environment did not deploy properly and may be in an unstable state.')
        }
    }
}
