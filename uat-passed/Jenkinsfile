@Library('sbms-pipeline-shared@master') _

pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 15, unit: 'MINUTES')
    }

    stages {
        stage('Prepare Release Candidate') {
            environment {
                SOURCE_IMAGE_TAG = 'uat'
                IMAGE_TAG = 'rc'
            }
            steps {
                withDockerRegistry([url: '', credentialsId: 'DOCKER_HUB_CREDENTIALS']) {
                    dockerTag("$SOURCE_IMAGE_TAG", "$IMAGE_TAG")
                    dockerPush("$IMAGE_TAG")
                }
            }
        }
    }
    post {
        success {
            notify('INFO', 'The application in UAT has been accepted as a Release Candidate.')
        }
        failure {
            notify('WARN', 'The application in UAT was not able to be accepted as a Release Candidate.')
        }
    }
}
