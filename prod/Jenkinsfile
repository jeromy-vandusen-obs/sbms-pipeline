@Library('sbms-pipeline-shared@master') _

pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 15, unit: 'MINUTES')
    }

    environment {
        PROD_HOST = "prod"
        DOCKER_HOST = "tcp://$PROD_HOST:2376"
        DOCKER_TLS_VERIFY = "1"
        DOCKER_CERT_PATH = "/root/.tls"
    }
    
    stages {
        stage('Deploy Application') {
            environment {
                STACK_NAME = "sbms-prod-app"
                SOURCE_IMAGE_TAG = "rc"
                IMAGE_TAG = "prod"

                ADMIN_PORT = "9999"
                WEB_PORT = "8080"
                GREETING_PORT = "8100"
                DISCOVERY_PORT = "8761"

                MONGODB_DATA_PATH = "/opt/sbms/mongodb"
                MONGODB_PORT = "27017"

                NETWORK_NAME = "sbms-prod-net"
            }
            steps {
                withDockerRegistry([url: '', credentialsId: 'DOCKER_HUB_CREDENTIALS']) {
                    pull("$SOURCE_IMAGE_TAG")
                    tag("$SOURCE_IMAGE_TAG", "$IMAGE_TAG")
                    deploy("$STACK_NAME")
                    push("$IMAGE_TAG")
                }
            }
        }
    }
    post {
        success {
            slackSend "<${env.BUILD_URL}|${env.JOB_NAME} #${env.BUILD_NUMBER}>: :trophy: *Production deployment successfully completed!*"
        }
        failure {
            slackSend "<${env.BUILD_URL}|${env.JOB_NAME} #${env.BUILD_NUMBER}>: :boom: *Production deployment failed!*"
        }
    }
}
