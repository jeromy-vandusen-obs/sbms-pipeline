pipeline {
    agent any

    environment {
        PROD_MASTER_1 = "172.24.140.83"
        PROD_NODE_1 = "172.24.140.90"

        INFRA_PRIMARY_MANAGER = "${PROD_MASTER_1}:2375"
        INFRA_SECONDARY_MANAGER = "${PROD_NODE_1}:2375"
        APP_SWARM_MANAGER = "${PROD_MASTER_1}:2375"
        APP_STACK_NAME = "sbms-prod-app"
        SOURCE_IMAGE_TAG = "rc"
        TARGET_IMAGE_TAG = "prod"
    }
    
    stages {
        stage('Prepare Infrastructure') {
            environment {
                COMPOSE_PROJECT_NAME = "sbms-prod-infra"
                IMAGE_TAG = "$TARGET_IMAGE_TAG"
                MONGODB_DATA_PATH = "/opt/sbms/mongodb"
                MONGODB_PORT = "27017"
                DISCOVERY_PORT = "8761"
                EUREKA_INSTANCE_LIST = "http://${PROD_MASTER_1}:8761/eureka/,http://${PROD_NODE_1}:8761/eureka/"
            }
            steps {
                sh "docker-compose -H $INFRA_PRIMARY_MANAGER -f sbms-infrastructure.yml pull"
                sh "docker-compose -H $INFRA_PRIMARY_MANAGER -f sbms-infrastructure.yml up -d"
                sh "docker-compose -H $INFRA_SECONDARY_MANAGER -f sbms-infrastructure.yml pull"
                sh "docker-compose -H $INFRA_SECONDARY_MANAGER -f sbms-infrastructure.yml up -d"
            }
        }
        stage('Deploy Application') {
            environment {
                IMAGE_TAG = "$TARGET_IMAGE_TAG"
                ADMIN_PORT = "9999"
                WEB_PORT = "8080"
                EUREKA_INSTANCE_LIST = "http://${PROD_MASTER_1}:8761/eureka/,http://${PROD_NODE_1}:8761/eureka/"
                MONGODB_HOST = "${PROD_MASTER_1}"
                MONGODB_PORT = "27017"
            }
            steps {
                withDockerRegistry([url: '', credentialsId: 'DOCKER_HUB_CREDENTIALS']) {
                    sh "docker tag jvandusen/sbms-discovery:$SOURCE_IMAGE_TAG jvandusen/sbms-discovery:$TARGET_IMAGE_TAG"
                    sh "docker tag jvandusen/sbms-admin:$SOURCE_IMAGE_TAG jvandusen/sbms-admin:$TARGET_IMAGE_TAG"
                    sh "docker tag jvandusen/sbms-web:$SOURCE_IMAGE_TAG jvandusen/sbms-web:$TARGET_IMAGE_TAG"
                    sh "docker tag jvandusen/sbms-greeting:$SOURCE_IMAGE_TAG jvandusen/sbms-greeting:$TARGET_IMAGE_TAG"

                    sh "docker -H $APP_SWARM_MANAGER stack deploy --compose-file docker-compose.yml --resolve-image always --prune $APP_STACK_NAME"

                    sh "docker push jvandusen/sbms-discovery:$TARGET_IMAGE_TAG"
                    sh "docker push jvandusen/sbms-admin:$TARGET_IMAGE_TAG"
                    sh "docker push jvandusen/sbms-web:$TARGET_IMAGE_TAG"
                    sh "docker push jvandusen/sbms-greeting:$TARGET_IMAGE_TAG"
                }
            }
        }
    }
}
